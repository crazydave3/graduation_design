const getRoomItemsPricing = (rooms: Record<string, number>) => {
        const clearRooms: Record<string, number> = {}
        for (let k in rooms) {
            const qty = rooms[k]
            if (qty > 0) {
                clearRooms[k] = qty
            }
        }
        const roomItemsPrice: AddToCartItem[] = []
        Object.entries(clearRooms).map(([id, quantity]) => {
            let tiersPricingId = ''
            for (let i = 0; i < Object.entries(selectedRoomsPricing).length; i++) {
                tiersPricingId = Object.entries(selectedRoomsPricing)[i][0]
                let roomPricing: HotelRoomTierPriceJSON | undefined
                hotel.rooms
                    .find((room) => room.id === id)
                    ?.tiers.map((tier) => {
                        tier.prices.map((price) => {
                            if (price.id === tiersPricingId) {
                                roomPricing = price
                                return
                            }
                        })
                    })
                if (!roomPricing) continue
                roomItemsPrice.push({
                    itemID: roomPricing.id,
                    price: roomPricing.price,
                    quantity: Object.entries(selectedRoomsPricing)[i][1],
                    type: 'room.tier.price'
                } as AddToCartItem)
            }
        })
        if (!roomItemsPrice || roomItemsPrice.length === 0) return []
        return roomItemsPrice as AddToCartItem[]
    }